{
  "id": "example1",
  "realm": "example1",
  "enabled": true,
  "registrationAllowed": true,
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "eventsEnabled": true,
  "eventsExpiration": 259200,
  "enabledEventTypes": [
    "AUTHREQID_TO_TOKEN",
    "AUTHREQID_TO_TOKEN_ERROR",
    "CLIENT_DELETE",
    "CLIENT_DELETE_ERROR",
    "CLIENT_INFO",
    "CLIENT_INFO_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "CLIENT_LOGIN",
    "CLIENT_LOGIN_ERROR",
    "CLIENT_REGISTER",
    "CLIENT_REGISTER_ERROR",
    "CLIENT_UPDATE",
    "CLIENT_UPDATE_ERROR",
    "CODE_TO_TOKEN",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "DELETE_ACCOUNT",
    "DELETE_ACCOUNT_ERROR",
    "EXECUTE_ACTIONS",
    "EXECUTE_ACTIONS_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "GRANT_CONSENT",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "IDENTITY_PROVIDER_LOGIN",
    "IDENTITY_PROVIDER_LOGIN_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "IDENTITY_PROVIDER_RESPONSE",
    "IDENTITY_PROVIDER_RESPONSE_ERROR",
    "IDENTITY_PROVIDER_RETRIEVE_TOKEN",
    "IDENTITY_PROVIDER_RETRIEVE_TOKEN_ERROR",
    "IMPERSONATE",
    "IMPERSONATE_ERROR",
    "INTROSPECT_TOKEN",
    "INTROSPECT_TOKEN_ERROR",
    "INVALID_SIGNATURE",
    "INVALID_SIGNATURE_ERROR",
    "LOGIN",
    "LOGIN_ERROR",
    "LOGOUT",
    "LOGOUT_ERROR",
    "OAUTH2_DEVICE_AUTH",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "PERMISSION_TOKEN",
    "PERMISSION_TOKEN_ERROR",
    "PUSHED_AUTHORIZATION_REQUEST",
    "PUSHED_AUTHORIZATION_REQUEST_ERROR",
    "REFRESH_TOKEN",
    "REFRESH_TOKEN_ERROR",
    "REGISTER",
    "REGISTER_ERROR",
    "REGISTER_NODE",
    "REGISTER_NODE_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "REMOVE_TOTP",
    "REMOVE_TOTP_ERROR",
    "RESET_PASSWORD",
    "RESET_PASSWORD_ERROR",
    "RESTART_AUTHENTICATION",
    "RESTART_AUTHENTICATION_ERROR",
    "REVOKE_GRANT",
    "REVOKE_GRANT_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "SEND_RESET_PASSWORD",
    "SEND_RESET_PASSWORD_ERROR",
    "SEND_VERIFY_EMAIL",
    "SEND_VERIFY_EMAIL_ERROR",
    "TOKEN_EXCHANGE",
    "TOKEN_EXCHANGE_ERROR",
    "UNREGISTER_NODE",
    "UNREGISTER_NODE_ERROR",
    "UPDATE_CONSENT",
    "UPDATE_CONSENT_ERROR",
    "UPDATE_EMAIL",
    "UPDATE_EMAIL_ERROR",
    "UPDATE_PASSWORD",
    "UPDATE_PASSWORD_ERROR",
    "UPDATE_PROFILE",
    "UPDATE_PROFILE_ERROR",
    "UPDATE_TOTP",
    "UPDATE_TOTP_ERROR",
    "USER_INFO_REQUEST",
    "USER_INFO_REQUEST_ERROR",
    "VALIDATE_ACCESS_TOKEN",
    "VALIDATE_ACCESS_TOKEN_ERROR",
    "VERIFY_EMAIL",
    "VERIFY_EMAIL_ERROR",
    "VERIFY_PROFILE",
    "VERIFY_PROFILE_ERROR"
  ],
  "loginTheme": "inventage",
  "accountTheme": "inventage.v2",
  "authenticationFlows": [
    {
      "id": "b1d0fb54-74a8-444a-9860-972a3434ec44",
      "alias": "browser2",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "browser2 forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "01798868-5121-454c-b860-57d7c4cdd214",
      "alias": "browser2 Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5b9b4127-911f-4d5b-b164-0fe3c944487e",
      "alias": "browser2 forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "no-operation-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 15,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "conditional_folio_login",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 15,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "browser2 Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "browserFlow": "browser2",
  "clients": [
    {
      "id": "myclient",
      "clientId": "myclient",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://www.keycloak.org/app/*"
      ],
      "webOrigins": [
        "https://www.keycloak.org"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false",
        "post.logout.redirect.uris": "https://www.keycloak.org/app/*"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ]
}
